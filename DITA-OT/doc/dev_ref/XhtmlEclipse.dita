<?xml version="1.0" encoding="UTF-8"?>
<!-- This file is part of the DITA Open Toolkit project hosted on 
 Sourceforge.net. See the accompanying license.txt file for 
 applicable licenses.-->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<reference id="xhtmleclipse" xml:lang="en-us">
<title>Eclipse help output (transform type "eclipsehelp")</title>
<shortdesc>Eclipse help is an XHTML based output format intended to
create a plug-in for the Eclipse Help system. Once the normal XHTML
process has run, the <codeph>dita.map.eclipse</codeph> target is used
to create a set of several control files and navigation files for
Eclipse.</shortdesc>
<refbody>
<section><p>Eclipse relies on several different files to control the
plug-in. Some of these are generated by the build, while others may
be created by hand. The Ant targets used to control this process are:<ul>
<li><codeph>dita.map.eclipse.init</codeph> sets up various default
properties for processing Eclipse output.</li>
<li><codeph>dita.map.eclipse.toc</codeph> creates the XML file that
defines an Eclipse table of contents.</li>
<li><codeph>dita.map.eclipse.index</codeph> creates the sorted XML
file that defines an Eclipse index.</li>
<li><codeph>dita.map.eclipse.plugin</codeph> creates the plugin.xml
file that controls the behavior of an Eclipse plug-in.</li>
<li><codeph>dita.map.eclipse.plugin.properties</codeph> creates a
Java properties file that sets properties for the plug-in (such as
name and version information).</li>
<li><codeph>dita.map.eclipse.manifest.file</codeph> creates a MANIFEST.MF
file with additional information used by Eclipse.</li>
<li><codeph>copy-plugin-files</codeph> checks for the presence of
several control files in the source directory, and copies those found
to the output directory.</li>
<li><codeph>dita.map.eclipse.fragment.language.init</codeph>, <codeph>dita.map.eclipse.fragment.language.country.init</codeph>,
and <codeph>dita.map.eclipse.fragment.error</codeph> all work together
to control Eclipse fragment files (used for versions of a plug-in
created for a new language or locale).</li>
</ul></p><p>Several of the targets listed above have matching templates
for processing content that is located outside of the scope of the
map directory (such as <codeph>dita.out.map.eclipse.toc</codeph>).</p></section>
</refbody>
</reference>
